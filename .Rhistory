library(magrittr)
install.packages("magrittr")
library(magrittr)
installed.packages("dplyr")
library(dplyr)
install.packages("dplyr")
odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=C:/Users/Kristen.Sauby/Documents/Projects/sampleDB1.mdb")
library(RODBC)
odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=C:/Users/Kristen.Sauby/Documents/Projects/sampleDB1.mdb")
odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=C:/Users/Kristen.Sauby/Documents/Projects/DatabaseTemplate.accdb")
odbcDriverConnect("Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:/Users/Kristen.Sauby/Documents/Projects/DatabaseTemplate.accdb;
Persist Security Info=False")
odbcDriverConnect("Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:/Users/Kristen.Sauby/Documents/Projects/DatabaseTemplate.accdb;
Persist Security Info=False")
library(odbc)
sort(unique(odbcListDrivers()[[1]]))
contest <- dbConnect(
drv = odbc::odbc(),
.connection_string = "Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=C:/Users/Kristen.Sauby/Documents/Projects/Misc/DatabaseTemplate.accdb"
)
library(dplyr)
library(dbplyr)
contest
sort(unique(odbcListDrivers()[[1]]))
q1 <- tbl(contest, "SpCount") %>%
group_by(Date) %>%
summarise(
mean_SpCount = mean(SpCount)
)
show_query(q1)
ql
q1
q1 <- tbl(contest, "SpCount") %>%
group_by(Species) %>%
summarise(
mean_SpCount = mean(SpCount)
)
show_query(q1)
q1
JackalopeInfo <- as.data.frame(cbind(
ID_number = 1:6,
sex = rep(c("M","F"),3),
Site = c(
rep("Paynes Prairie", 2),
rep("San Felasco", 2),
rep("Ocala National Forest", 2)
)
))
# JackalopeSurveys
JackalopeSurveys <- expand.grid(
ID_number = 1:6,
Survey_Date = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
) %>%
arrange(ID_number)
JackalopeSurveys$Weight <- c(
runif(6,min=8100,max=8200),
runif(6,min=8400,max=8500),
runif(6,min=8900,max=9000),
runif(6,min=9400,max=9500),
runif(6,min=5000,max=5100),
runif(6,min=6600,max=6700)
)
ggplot(
JackalopeSurveys,
aes(
Survey_Date, Weight, shape = factor(ID_number))) +
geom_point(aes(colour = factor(ID_number)), size = 4) +
geom_point(colour = "grey90", size = 1.5)
#install.packages("ImportExport")
library(ImportExport)
access_export(
"C:/Users/Kristen.Sauby/Documents/Projects/EasternJackalope.accdb",
x=list(JackalopeInfo, JackalopeSurveys)
)
access_export(
"C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/EasternJackalope.accdb",
x=list(JackalopeInfo, JackalopeSurveys)
)
access_export
database.name = "C:/Users/Kristen.Sauby/Documents/Projects/Misc/DatabaseTemplate.accdb"
paste(
"Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=",
database.name,
sep=""
)
ExporttoACCDB <- function (
database.name = "C:/Users/Kristen.Sauby/Documents/Projects/Misc/DatabaseTemplate.accdb",
x,
tablename = as.character(1:length(x)),
...
){
mycon <- dbConnect(
drv = odbc::odbc(),
.connection_string = paste(
"Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=",
database.name,
sep=""
)
)
if (class(x) == "data.frame")
dbWriteTable(mycon, x, tablename = tablename[1], ...)
else for (i in 1:length(x)){
dbWriteTable(mycon, x, tablename = tablename[1], ...)
}
close(mycon)
}
ExporttoACCDB(
database.name = "C:/Users/Kristen.Sauby/Documents/Projects/Misc/DatabaseTemplate.accdb",
x=list(JackalopeInfo, JackalopeSurveys)
)
database.name = "C:/Users/Kristen.Sauby/Documents/Projects/Misc/DatabaseTemplate.accdb"
x=list(JackalopeInfo, JackalopeSurveys)
mycon <- dbConnect(
drv = odbc::odbc(),
.connection_string = paste(
"Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=",
database.name,
sep=""
)
)
class(x) == "data.frame"
i=1
dbWriteTable(mycon, x, tablename = tablename[1], ...)
dbWriteTable(mycon, x, tablename = tablename[1])
str(JackalopeSurveys)
JackalopeSurveys
# create fake data about the Eastern Jackalope
# JackalopeInfo
JackalopeInfo <- as.data.frame(cbind(
ID_number = 1:6,
sex = rep(c("M","F"),3),
Site = c(
rep("Paynes Prairie", 2),
rep("San Felasco", 2),
rep("Ocala National Forest", 2)
)
))
# JackalopeSurveys
JackalopeSurveys <- expand.grid(
ID_number = 1:6,
Survey_Date = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
) %>%
arrange(ID_number)
JackalopeSurveys$Weight <- c(
runif(6,min=8100,max=8200),
runif(6,min=8400,max=8500),
runif(6,min=8900,max=9000),
runif(6,min=9400,max=9500),
runif(6,min=5000,max=5100),
runif(6,min=6600,max=6700)
)
str(JackalopeSurveys)
str(JackalopeInfo)
JackalopeSurveys %>% as.data.frame %>% str
ExporttoACCDB(
database.name = "C:/Users/Kristen.Sauby/Documents/Projects/Misc/DatabaseTemplate.accdb",
x=list(JackalopeInfo)
)
dbWriteTable(mycon, x, tablename = tablename[1])
?dbWriteTable
dbWriteTable(mycon, "mtcars", mtcars[1:5, ])
dbWriteTable
library(RODBC)
ExporttoACCDB(
database.name = "C:/Users/Kristen.Sauby/Documents/Projects/Misc/DatabaseTemplate.accdb",
x=list(JackalopeInfo)
)
ImportExport::access_export("C:/Users/Kristen.Sauby/Documents/Projects/Misc/DatabaseTemplate.accdb",as.data.frame(JackalopeInfo),
tablename="JackalopeInfo")
?dbld
??dbld
??dbid
??Id
mycon
dbWriteTable(mycon, JackalopeInfo, tablename = "JackalopeInfo")
database.name = "C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/JackalopeInfo.accdb"
mycon <- dbConnect(
drv = odbc::odbc(),
.connection_string = paste(
"Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=",
database.name,
sep=""
)
)
database.name = "C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/EasternJackalope.accdb"
mycon <- dbConnect(
drv = odbc::odbc(),
.connection_string = paste(
"Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=",
database.name,
sep=""
)
)
dbWriteTable(mycon, JackalopeInfo, tablename = "JackalopeInfo")
?dbWriteTable
dbWriteTable(conn=mycon, value=JackalopeInfo, name = "JackalopeInfo")
install.packages("devtools")
devtools::install_github("vh-d/odbc")
library(odbc)
dbWriteTable(conn=mycon, value=JackalopeInfo, name = "JackalopeInfo")
dbWriteTable(conn=mycon, value=JackalopeInfo, name = "JackalopeInfo", append=T)
dbWriteTable(conn=mycon, value=JackalopeInfo, name = "JackalopeInfo", overwrite=T)
str(JackalopeInfo)
devtools::install_github("vh-d/odbc", ref = "batch_size_solution")
dbWriteTable(conn=mycon, value=JackalopeInfo, name = "JackalopeInfo", overwrite=T)
?include_graphics
library(knitr)
# create fake data about the Eastern Jackalope
# JackalopeInfo
JackalopeInfo <- as.data.frame(cbind(
ID_number = 1:6,
sex = rep(c("M","F"),3),
Site = c(
rep("Paynes Prairie", 2),
rep("San Felasco", 2),
rep("Ocala National Forest", 2)
)
))
# JackalopeSurveys
JackalopeSurveys <- expand.grid(
ID_number = 1:6,
Survey_Date = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
) %>%
arrange(ID_number)
JackalopeSurveys$Weight <- c(
runif(6,min=8100,max=8200),
runif(6,min=8400,max=8500),
runif(6,min=8900,max=9000),
runif(6,min=9400,max=9500),
runif(6,min=5000,max=5100),
runif(6,min=6600,max=6700)
)
library(magrittr)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE)
```{r, include=FALSE}
library(knitr)
library(magrittr)
library(tidyverse)
getwd()
setwd("C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/R_SQL_Workflows")
setwd("C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/R_SQL_Workflows")
# create fake data about the Eastern Jackalope
# JackalopeInfo
JackalopeInfo <- as.data.frame(cbind(
ID_number = 1:6,
sex = rep(c("M","F"),3),
Site = c(
rep("Paynes Prairie", 2),
rep("San Felasco", 2),
rep("Ocala National Forest", 2)
)
))
# JackalopeSurveys
JackalopeSurveys <- expand.grid(
ID_number = 1:6,
Survey_Date = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
) %>%
arrange(ID_number)
JackalopeSurveys$Weight <- c(
runif(6,min=8100,max=8200),
runif(6,min=8400,max=8500),
runif(6,min=8900,max=9000),
runif(6,min=9400,max=9500),
runif(6,min=5000,max=5100),
runif(6,min=6600,max=6700)
)
write.csv(JackalopeInfo, "./data/JackalopeInfo.csv")
write.csv(JackalopeSurveys, "./data/JackalopeSurveys.csv")
seq(as.Date("2000/1/1 00:00"), by = "month", length.out = 6)
??chron
# JackalopeSurveys
JackalopeSurveys <- expand.grid(
IDNumber = 1:6,
SurveyDate = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
) %>%
arrange(IDNumber)
JackalopeSurveys$SurveyDate %<>% chron(format=c('y-m-d','h:m:s'))
install.packages("chron")
library(chron)
# JackalopeSurveys
JackalopeSurveys <- expand.grid(
IDNumber = 1:6,
SurveyDate = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
) %>%
arrange(IDNumber)
JackalopeSurveys$SurveyDate %<>% chron(format=c('y-m-d','h:m:s'))
str(JackalopeSurveys)
expand.grid(
IDNumber = 1:6,
SurveyDate = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
)
JackalopeSurveys <- expand.grid(
IDNumber = 1:6,
SurveyDate = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
) %>%
arrange(IDNumber)
str(JackalopeSurveys)
source('~/Projects/Data_Management_Workflows/R_SQL_Workflows/code/fake_database.R', echo=TRUE)
JackalopeSurveys <- expand.grid(
IDNumber = 1:6,
SurveyDate = seq(as.Date("2000/1/1"), by = "month", length.out = 6)
) %>%
arrange(IDNumber) %>%
as.data.frame
str(JackalopeSurveys)
JackalopeSurveys$SurveyDate
seq(as.Date("2000/1/1 00:00:00"), by = "month", length.out = 6)
?as.Date
seq(as.Date("2000/1/1 00:00:00", format= "%Y-%m-%d %H:%M:%S"), by = "month", length.out = 6)
seq(as.Date("2000/1/1", format= "%Y-%m-%d %H:%M:%S"), by = "month", length.out = 6)
format(
seq.Date(
as.Date("2000/1/1"), by = "month", length.out = 6
),
"%Y-%m-%d %H:%M:%S"
)
JackalopeSurveys <- expand.grid(
IDNumber = 1:6,
SurveyDate = format(
seq.Date(
as.Date("2000/1/1"), by = "month", length.out = 6
),
"%Y-%m-%d %H:%M:%S"
)
) %>%
arrange(IDNumber) %>%
as.data.frame
JackalopeSurveys$SurveyDate %<>% chron(format=c('y-m-d','h:m:s'))
JackalopeSurveys$Weight <- c(
runif(6,min=8100,max=8200),
runif(6,min=8400,max=8500),
runif(6,min=8900,max=9000),
runif(6,min=9400,max=9500),
runif(6,min=5000,max=5100),
runif(6,min=6600,max=6700)
)
write.csv(JackalopeInfo, "./data/JackalopeInfo.csv")
write.csv(JackalopeSurveys, "./data/JackalopeSurveys.csv")
# JackalopeSurveys
JackalopeSurveys <- expand.grid(
IDNumber = 1:6,
SurveyDate = format(
seq.Date(
as.Date("2000/1/1"), by = "month", length.out = 6
),
"%Y-%m-%d %H:%M:%S"
)
) %>%
arrange(IDNumber) %>%
as.data.frame
JackalopeSurveys$Weight <- c(
runif(6,min=8100,max=8200),
runif(6,min=8400,max=8500),
runif(6,min=8900,max=9000),
runif(6,min=9400,max=9500),
runif(6,min=5000,max=5100),
runif(6,min=6600,max=6700)
)
write.csv(JackalopeInfo, "./data/JackalopeInfo.csv")
write.csv(JackalopeSurveys, "./data/JackalopeSurveys.csv")
setwd("C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/R_SQL_Workflows")
library(chron)
# create fake data about the Eastern Jackalope
# JackalopeInfo
JackalopeInfo <- as.data.frame(cbind(
IDNumber = 1:6,
sex = rep(c("M","F"),3),
Site = c(
rep("Paynes Prairie", 2),
rep("San Felasco", 2),
rep("Ocala National Forest", 2)
)
))
write.csv(JackalopeInfo, "./data/JackalopeInfo.csv")
write.csv(JackalopeSurveys, "./data/JackalopeSurveys.csv")
jackalope <- dbConnect(
drv = odbc::odbc(),
.connection_string = "Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/EasternJackalope.accdb"
)
??dbConnect
library(odbc)
.connection_string = "Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/EasternJackalope.accdb"
jackalope <- dbConnect(
drv = odbc::odbc(),
.connection_string = "Driver={Microsoft Access Driver (*.mdb, *.accdb)}; Dbq=C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/EasternJackalope.accdb"
)
str(jackalope)
dbListTables(jackalope)
dbListTables(jackalope, "jackalope")
dbListTables(jackalope, "EasternJackalope")
str(jackalope)
dbListTables(jackalope, "C:/Users/Kristen.Sauby/Documents/Projects/Data_Management_Workflows/EasternJackalope.accdb")
?dbListTables
odbc::dbListTables(jackalope)
DBI::dbListTables(jackalope)
str(tbl(jackalope, "JackalopeSurveys"))
tbl(jackalope, "JackalopeSurveys") %>% str
jackalope
jackalope$ops
dbReadTable(jackalope, "JackalopeSurveys")
?dbReadTable
library(DBI)
dbReadTable(jackalope, "JackalopeSurveys")
JackalopeSurveys <- dbReadTable(jackalope, "JackalopeSurveys")
head(JackalopeSurveys)
q1 <- tbl(jackalope, "JackalopeSurveys") %>%
group_by(IDNumber) %>%
summarise(
AverageWeight = mean(Weight)
)
show_query(q1)
q1
tbl(jackalope, "JackalopeSurveys") %>%
group_by(IDNumber) %>%
summarise(
AverageWeight = mean(Weight)
)
show_query(q1)
tbl(contest, "SpCount") %>%
merge(tbl(contest, "SpCount"), by="IDNumber")
View(JackalopeSurveys)
tbl(jackalope, "JackalopeInfo") %>%
merge(
tbl(jackalope, "JackalopeSurveys"),
by="IDNumber"
)
